{"version":3,"sources":["assets/images/logo.svg","assets/images/profile.svg","assets/images/destination.svg","assets/images/warehouse.svg","components/header/Header.js","components/shipments/ShipmentTableHeader.js","components/shipments/shipment-status/Delivered.js","components/shipments/shipment-status/InTransit.js","components/shipments/shipment-status/Undelivered.js","components/shipments/shipment-status/NoInformationYet.js","components/shipments/shipment-status/OutForDelivery.js","components/timeline/TimelineView.js","components/timeline/Timeline.js","components/shipments/ShipmentList.js","App.js","index.js"],"names":["module","exports","withStyles","profileCircle","backgroundColor","height","padding","borderRadius","brandName","marginLeft","navLinkContainer","margin","homeBtn","lineHeight","navBar","props","classes","AppBar","className","color","Toolbar","src","IntugineIcon","alt","Typography","variant","Button","ProfileIcon","tableCellTitle","fontSize","letterSpacing","textTransform","TableRow","TableCell","style","minWidth","align","styles","statusDeliveredColor","tableCellColor","tableRowText","DeliveredShipments","deliveredItemRef","this","click","prevProps","delivered","length","sort","a","b","awbno","map","index","ref","onClick","getClickedShipmentId","_id","key","component","scope","carrier","from","to","pickup_date","moment","format","extra_fields","expected_delivery_date","current_status","Component","InTransit","inTransitItemRef","inTransit","UndeliveredShipments","undeliveredItemRef","undeliveredShipments","NoInfoShipments","noInfoYetItemRef","noInfoShipments","OutForDelivery","outForDeliveryItemRef","outForDelivery","TimelineView","item","itemKey","clickedStatusCode","status_detail","location","time","Timeline","renderTimelineView","statusCode","filter","el","Object","keys","statusCodeTimelineView","clickedShipmentId","sc","scan","undelivered","deliveredTimelineView","inTransitTimelineView","outForDeliveryTimelineView","undeliveredTimelineView","destinationIcon","DestinationIcon","warehouseIcon","WarehouseIcon","ShipmentList","getCounterStatusCodesLength","counterStatusCodesList","val","getShipmentList","headerConfig","headers","Authorization","process","axios","post","email","then","res","data","csc","current_status_code","noInformationYet","setState","shipmentList","counterStatusCodes","DEL","INT","UND","NFI","OOD","catch","err","console","log","clickedCounter","activeCounter","state","getDeliveredShipmentClickedId","id","getShipmentData","delCardRef","deliveredShipmentData","inTransitShipmentData","undeliveredShipmentData","outForDeliveryShipmentData","tableContainer","Table","stickyHeader","aria-label","stickyTable","TableHead","TableBody","cursor","Delivered","border","float","overflow","maxHeight","width","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b7c9693.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.877653ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.52b703a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/destination.85f9fdcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/warehouse.1f5bfd3e.svg\";","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IntugineIcon from '../../assets/images/logo.svg';\nimport ProfileIcon from '../../assets/images/profile.svg';\nimport { withStyles } from '@material-ui/core/styles';\n\n// Using custom styles object, and withStyles HOC to add custom styles to Material UI\n\nconst styles = {\n  profileCircle: {\n    backgroundColor: '#bfc2c9',\n    height: '50px',\n    padding: '0.4em',\n    borderRadius: '50%'\n  },\n  brandName: {\n    marginLeft: '1em'\n  },\n  navLinkContainer: {\n    margin: '0 0 0 auto'\n  },\n  homeBtn: {\n    backgroundColor: '#f8f9ff',\n    lineHeight: '4em'\n  },\n  navBar: {\n    padding: '1em',\n    backgroundColor: '#fefefe'\n  }\n};\n\nconst Header = props => {\n  const { classes } = props;\n  return (\n    <div>\n      <AppBar className={classes.navBar} color=\"default\">\n        <Toolbar>\n          <img src={IntugineIcon} alt=\"\" />\n          <Typography className={classes.brandName} variant=\"h6\">\n            Intugine\n          </Typography>\n          <div className={classes.navLinkContainer}>\n            <Button className={classes.homeBtn}>Home</Button>\n            <Button>Brands</Button>\n            <Button>Transporters</Button>\n            <Button className={classes.profileCircle}>\n              <img src={ProfileIcon} alt=\"\" />\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = {\n  tableCellTitle: {\n    color: '#c3cbd8',\n    fontSize: '0.6em',\n    letterSpacing: '1px',\n    backgroundColor: 'white',\n    textTransform: 'uppercase'\n  }\n};\n\nconst ShipmentTableHeader = props => {\n  const { classes } = props;\n  return (\n    <TableRow>\n      <TableCell\n        className={classes.tableCellTitle}\n        style={{ minWidth: '100px' }}\n        align=\"center\"\n      >\n        AWB Number\n      </TableCell>\n      <TableCell className={classes.tableCellTitle} align=\"center\">\n        Transporter\n      </TableCell>\n      <TableCell className={classes.tableCellTitle} align=\"center\">\n        Source\n      </TableCell>\n      <TableCell className={classes.tableCellTitle} align=\"center\">\n        Destination\n      </TableCell>\n      <TableCell className={classes.tableCellTitle} align=\"center\">\n        Brand\n      </TableCell>\n      <TableCell\n        className={classes.tableCellTitle}\n        style={{ minWidth: '100px' }}\n        align=\"center\"\n      >\n        Start Date\n      </TableCell>\n      <TableCell className={classes.tableCellTitle} align=\"center\">\n        ETD\n      </TableCell>\n      <TableCell\n        className={classes.tableCellTitle}\n        style={{ minWidth: '130px' }}\n        align=\"center\"\n      >\n        Status\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default withStyles(styles)(ShipmentTableHeader);\n","import React, { Component } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nexport const tableCellColor = '#353535';\nexport const statusDeliveredColor = '#44b856';\n\nconst styles = {\n  statusDeliveredColor: {\n    color: statusDeliveredColor\n  },\n  tableCellColor: {\n    color: tableCellColor\n  },\n  tableRowText: {\n    color: tableCellColor,\n    fontSize: '0.9em'\n  }\n};\n\nclass DeliveredShipments extends Component {\n  constructor(props) {\n    super(props);\n    this.deliveredItemRef = [];\n  }\n  componentDidMount() {\n    this.deliveredItemRef[0] && this.deliveredItemRef[0].click();\n    // Trigger auto-click on the first item of the shipment to display it's timeline view by default\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.delivered.length !== prevProps.delivered.length) {\n      this.deliveredItemRef[0] && this.deliveredItemRef[0].click();\n    }\n  }\n  render() {\n    const { delivered, classes } = this.props;\n    return (\n      <>\n        {delivered\n          ? delivered\n              .sort((a, b) => a.awbno - b.awbno)\n              .map((delivered, index) => (\n                <TableRow\n                  style={{ height: 50 }}\n                  ref={ref => (this.deliveredItemRef[index] = ref)}\n                  onClick={() => this.props.getClickedShipmentId(delivered._id)}\n                  className=\"shipment_item\"\n                  key={delivered._id}\n                >\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                    #{delivered.awbno ? delivered.awbno : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableRowText} align=\"center\">\n                    {delivered.carrier ? delivered.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableRowText} align=\"center\">\n                    {delivered.from ? delivered.from : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableRowText} align=\"center\">\n                    {delivered.to ? delivered.to : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableRowText} align=\"center\">\n                    {delivered.carrier ? delivered.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {delivered.pickup_date\n                      ? moment(delivered.pickup_date).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {delivered.extra_fields\n                      ? moment(\n                          delivered.extra_fields.expected_delivery_date\n                        ).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell\n                    className={classes.statusDeliveredColor}\n                    align=\"center\"\n                  >\n                    {delivered.current_status ? delivered.current_status : 'NA'}\n                  </TableCell>\n                </TableRow>\n              ))\n          : ''}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(DeliveredShipments);\n","import React, { Component } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport moment from 'moment';\nimport { tableCellColor, statusDeliveredColor } from './Delivered';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  tableCellColor: {\n    color: tableCellColor\n  },\n  statusDeliveredColor: {\n    color: statusDeliveredColor\n  }\n};\n\nclass InTransit extends Component {\n  constructor(props) {\n    super(props);\n    this.inTransitItemRef = [];\n  }\n  componentDidMount() {\n    this.inTransitItemRef[0] && this.inTransitItemRef[0].click();\n    // Trigger auto-click on the first item of the shipment to display it's timeline view by default\n  }\n  render() {\n    const { inTransit, classes } = this.props;\n    return (\n      <>\n        {inTransit\n          ? inTransit\n              .sort((a, b) => a._id - b._id)\n              .map((inTransit, index) => (\n                <TableRow\n                  ref={ref => (this.inTransitItemRef[index] = ref)}\n                  onClick={() => this.props.getClickedShipmentId(inTransit._id)}\n                  className=\"shipment_item\"\n                  key={inTransit._id}\n                >\n                  <TableCell\n                    className={classes.tableCellColor}\n                    component=\"th\"\n                    scope=\"row\"\n                    align=\"center\"\n                  >\n                    #{inTransit.awbno ? inTransit.awbno : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {inTransit.carrier ? inTransit.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {inTransit.from ? inTransit.from : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {inTransit.to ? inTransit.to : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {inTransit.carrier ? inTransit.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {inTransit.pickup_date\n                      ? moment(inTransit.pickup_date).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {inTransit.extra_fields\n                      ? moment(\n                          inTransit.extra_fields.expected_delivery_date\n                        ).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell\n                    className={classes.statusDeliveredColor}\n                    align=\"center\"\n                  >\n                    {inTransit.current_status ? inTransit.current_status : ''}\n                  </TableCell>\n                </TableRow>\n              ))\n          : ''}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(InTransit);\n","import React, { Component } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport moment from 'moment';\n\nexport default class UndeliveredShipments extends Component {\n  constructor(props) {\n    super(props);\n    this.undeliveredItemRef = [];\n  }\n  componentDidMount() {\n    this.undeliveredItemRef[0] && this.undeliveredItemRef[0].click();\n    // Trigger auto-click on the first item of the shipment to display it's timeline view by default\n  }\n  render() {\n    const undeliveredShipments = this.props.undeliveredShipments;\n    return (\n      <>\n        {undeliveredShipments\n          ? undeliveredShipments\n              .sort((a, b) => a._id - b._id)\n              .map((undeliveredShipments, index) => (\n                <TableRow\n                  ref={ref => (this.undeliveredItemRef[index] = ref)}\n                  onClick={() =>\n                    this.props.getClickedShipmentId(undeliveredShipments._id)\n                  }\n                  className=\"shipment_item\"\n                  key={undeliveredShipments._id}\n                >\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                    #\n                    {undeliveredShipments.awbno\n                      ? undeliveredShipments.awbno\n                      : ''}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {undeliveredShipments.carrier\n                      ? undeliveredShipments.carrier\n                      : ''}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {undeliveredShipments.from\n                      ? undeliveredShipments.from\n                      : 'NA'}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {undeliveredShipments.to ? undeliveredShipments.to : 'NA'}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {undeliveredShipments.carrier\n                      ? undeliveredShipments.carrier\n                      : ''}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {undeliveredShipments.pickup_date\n                      ? moment(undeliveredShipments.pickup_date).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell align=\"center\">\n                    {undeliveredShipments.extra_fields\n                      ? moment(\n                          undeliveredShipments.extra_fields\n                            .expected_delivery_date\n                        ).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell style={{ color: '#44b856' }} align=\"center\">\n                    {undeliveredShipments.current_status\n                      ? undeliveredShipments.current_status\n                      : ''}\n                  </TableCell>\n                </TableRow>\n              ))\n          : ''}\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport moment from 'moment';\nimport { tableCellColor, statusDeliveredColor } from './Delivered';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  tableCellColor: {\n    color: tableCellColor\n  },\n  statusDeliveredColor: {\n    color: statusDeliveredColor\n  }\n};\n\nclass NoInfoShipments extends Component {\n  constructor(props) {\n    super(props);\n    this.noInfoYetItemRef = [];\n  }\n  componentDidMount() {\n    this.noInfoYetItemRef[0] && this.noInfoYetItemRef[0].click();\n    // Trigger auto-click on the first item of the shipment to display it's timeline view by default\n  }\n  render() {\n    const { noInfoShipments, classes } = this.props;\n    return (\n      <>\n        {noInfoShipments\n          ? noInfoShipments\n              .sort((a, b) => a._id - b._id)\n              .map((noInfoShipments, index) => (\n                <TableRow\n                  ref={ref => (this.noInfoYetItemRef[index] = ref)}\n                  onClick={() =>\n                    this.props.getClickedShipmentId(noInfoShipments._id)\n                  }\n                  className=\"shipment_item\"\n                  key={noInfoShipments._id}\n                >\n                  <TableCell\n                    className={classes.tableCellColor}\n                    component=\"th\"\n                    scope=\"row\"\n                    align=\"center\"\n                  >\n                    #{noInfoShipments.awbno ? noInfoShipments.awbno : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {noInfoShipments.carrier ? noInfoShipments.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {noInfoShipments.from ? noInfoShipments.from : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {noInfoShipments.to ? noInfoShipments.to : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {noInfoShipments.carrier ? noInfoShipments.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {noInfoShipments.pickup_date\n                      ? moment(noInfoShipments.pickup_date).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {noInfoShipments.extra_fields\n                      ? moment(\n                          noInfoShipments.extra_fields.expected_delivery_date\n                        ).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell\n                    className={classes.statusDeliveredColor}\n                    align=\"center\"\n                  >\n                    {noInfoShipments.current_status\n                      ? noInfoShipments.current_status\n                      : ''}\n                  </TableCell>\n                </TableRow>\n              ))\n          : ''}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(NoInfoShipments);\n","import React, { Component } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport moment from 'moment';\nimport { tableCellColor, statusDeliveredColor } from './Delivered';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  tableCellColor: {\n    color: tableCellColor\n  },\n  statusDeliveredColor: {\n    color: statusDeliveredColor\n  }\n};\n\nclass OutForDelivery extends Component {\n  constructor(props) {\n    super(props);\n    this.outForDeliveryItemRef = [];\n  }\n  componentDidMount() {\n    this.outForDeliveryItemRef[0] && this.outForDeliveryItemRef[0].click();\n    // Trigger auto-click on the first item of the shipment to display it's timeline view by default\n  }\n  render() {\n    const { outForDelivery, classes } = this.props;\n    return (\n      <>\n        {outForDelivery\n          ? outForDelivery\n              .sort((a, b) => a._id - b._id)\n              .map((outForDelivery, index) => (\n                <TableRow\n                  ref={ref => (this.outForDeliveryItemRef[index] = ref)}\n                  onClick={() =>\n                    this.props.getClickedShipmentId(outForDelivery._id)\n                  }\n                  className=\"shipment_item\"\n                  key={outForDelivery._id}\n                >\n                  <TableCell\n                    className={classes.tableCellColor}\n                    component=\"th\"\n                    scope=\"row\"\n                    align=\"center\"\n                  >\n                    #{outForDelivery.awbno ? outForDelivery.awbno : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {outForDelivery.carrier ? outForDelivery.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {outForDelivery.from ? outForDelivery.from : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {outForDelivery.to ? outForDelivery.to : 'NA'}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {outForDelivery.carrier ? outForDelivery.carrier : ''}\n                  </TableCell>\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {outForDelivery.pickup_date\n                      ? moment(outForDelivery.pickup_date).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell className={classes.tableCellColor} align=\"center\">\n                    {outForDelivery.extra_fields\n                      ? moment(\n                          outForDelivery.extra_fields.expected_delivery_date\n                        ).format('L')\n                      : 'NA'}\n                  </TableCell>\n\n                  <TableCell\n                    className={classes.statusDeliveredColor}\n                    align=\"center\"\n                  >\n                    {outForDelivery.current_status\n                      ? outForDelivery.current_status\n                      : ''}\n                  </TableCell>\n                </TableRow>\n              ))\n          : ''}\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(OutForDelivery);\n","import React from 'react';\n\nexport const TimelineView = props => {\n  const { item, itemKey, clickedStatusCode } = props;\n  return (\n    <>\n      {clickedStatusCode !== 'NFI' ? (\n        <div key={itemKey}>\n          <div className=\"vertical_line\"></div>\n          <div className=\"bullet\"></div>\n          <div className=\"left_arrow\"></div>\n          <div\n            className={`content ${\n              item[itemKey].status_detail === 'DELIVERED'\n                ? 'delivery_success'\n                : ''\n            }`}\n          >\n            <p className=\"shipping_status\">\n              {itemKey ? item[itemKey].location : ''}\n            </p>\n            <p className=\"time\">{itemKey ? item[itemKey].time : ''}</p>\n          </div>\n        </div>\n      ) : clickedStatusCode === 'NFI' ? (\n        <>\n          <div className=\"vertical_line\"></div>\n          <div className=\"bullet\"></div>\n          <div className=\"left_arrow\"></div>\n          <div className=\"content\">\n            <p className=\"shipping_status\">No Information Yet</p>\n            <p className=\"time\">N/A</p>\n          </div>\n        </>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport DestinationIcon from '../../assets/images/destination.svg';\nimport WarehouseIcon from '../../assets/images/warehouse.svg';\nimport { withStyles } from '@material-ui/core/styles';\nimport '../../styles/Timeline.css';\nimport { TimelineView } from './TimelineView';\n\nconst styles = {\n  destinationIcon: {\n    margin: '0 auto'\n  },\n  warehouseIcon: {\n    margin: '0 auto'\n  }\n};\nclass Timeline extends Component {\n  renderTimelineView = statusCode => {\n    const { clickedStatusCode } = this.props;\n    return statusCode\n      .filter(el => el)\n      .map(item =>\n        Object.keys(item).map(key => (\n          <TimelineView\n            clickedStatusCode={clickedStatusCode}\n            key={key}\n            item={item}\n            itemKey={key}\n          />\n        ))\n      );\n  };\n\n  statusCodeTimelineView = statusCode => {\n    const { clickedShipmentId } = this.props;\n    return statusCode\n      .filter(item => item._id === clickedShipmentId)\n      .map(sc => sc.scan);\n  };\n\n  render() {\n    const {\n      classes,\n      clickedStatusCode,\n      delivered,\n      inTransit,\n      outForDelivery,\n      undelivered\n    } = this.props;\n    /* ------------------------------------------------\n    Get timeline view for shipment item that is clicked\n    --------------------------------------------------- */\n\n    const deliveredTimelineView = this.statusCodeTimelineView(delivered);\n\n    const inTransitTimelineView = this.statusCodeTimelineView(inTransit);\n\n    const outForDeliveryTimelineView = this.statusCodeTimelineView(\n      outForDelivery\n    );\n\n    const undeliveredTimelineView = this.statusCodeTimelineView(undelivered);\n\n    return (\n      <div className=\"timeline_container\">\n        <div className=\"destination_icon_circle\">\n          <img\n            className={classes.destinationIcon}\n            src={DestinationIcon}\n            alt=\"\"\n          />\n        </div>\n        {clickedStatusCode === 'DEL' ? (\n          this.renderTimelineView(deliveredTimelineView)\n        ) : clickedStatusCode === 'INT' ? (\n          this.renderTimelineView(inTransitTimelineView)\n        ) : clickedStatusCode === 'UND' ? (\n          this.renderTimelineView(undeliveredTimelineView)\n        ) : clickedStatusCode === 'OOD' ? (\n          this.renderTimelineView(outForDeliveryTimelineView)\n        ) : clickedStatusCode === 'NFI' ? (\n          // No need of item and key props here, as we're only rendering a simple HTML template\n          <TimelineView clickedStatusCode={clickedStatusCode} />\n        ) : (\n          ''\n        )}\n\n        <div className=\"vertical_line\"></div>\n        <div className=\"warehouse_icon_circle\">\n          <img className={classes.warehouseIcon} src={WarehouseIcon} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Timeline);\n","import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport ShipmentTableHeader from './ShipmentTableHeader';\nimport InTransit from './shipment-status/InTransit';\nimport UndeliveredShipments from './shipment-status/Undelivered';\nimport NoInfoShipments from './shipment-status/NoInformationYet';\nimport DeliveredShipments from './shipment-status/Delivered';\nimport OutForDelivery from './shipment-status/OutForDelivery';\nimport axios from 'axios';\nimport Timeline from '../timeline/Timeline';\nimport { withStyles } from '@material-ui/core/styles';\nimport '../../styles/Shipments.css';\n\nconst styles = {\n  stickyTable: {\n    border: '2px solid #e8edff',\n    margin: '0 4em 0 auto'\n  },\n  tableContainer: {\n    float: 'right',\n    margin: '2em 5em 2em 3em',\n    overflow: 'auto',\n    maxHeight: '1200px',\n    width: '600px'\n  }\n};\n\nclass ShipmentList extends Component {\n  constructor(props) {\n    super(props);\n    this.delCardRef = [];\n    this.state = {\n      shipmentList: [],\n      counterStatusCodes: {},\n      clickedStatusCode: 'DEL',\n      activeCounter: false,\n      clickedShipmentId: ''\n    };\n  }\n  getCounterStatusCodesLength = (counterStatusCodesList, statusCode) => {\n    return counterStatusCodesList.filter(val => val === `${statusCode}`).length;\n  };\n  getShipmentList = () => {\n    const headerConfig = {\n      headers: { Authorization: `Bearer ${process.env.REACT_APP_BEARER_TOKEN}` }\n    };\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}`,\n        {\n          email: `${process.env.REACT_APP_USER_EMAIL}`\n        },\n        headerConfig\n      )\n      .then(res => {\n        const counterStatusCodesList = res.data.data.map(\n          csc => csc.current_status_code\n        );\n        const delivered = this.getCounterStatusCodesLength(\n          counterStatusCodesList,\n          'DEL'\n        );\n        const inTransit = this.getCounterStatusCodesLength(\n          counterStatusCodesList,\n          'INT'\n        );\n        const undelivered = this.getCounterStatusCodesLength(\n          counterStatusCodesList,\n          'UND'\n        );\n        const noInformationYet = this.getCounterStatusCodesLength(\n          counterStatusCodesList,\n          'NFI'\n        );\n        const outForDelivery = this.getCounterStatusCodesLength(\n          counterStatusCodesList,\n          'OOD'\n        );\n        this.setState({\n          shipmentList: res.data.data,\n          counterStatusCodes: {\n            DEL: delivered,\n            INT: inTransit,\n            UND: undelivered,\n            NFI: noInformationYet,\n            OOD: outForDelivery\n          }\n        });\n      })\n      .catch(err => console.log(err));\n  };\n  componentDidMount() {\n    this.getShipmentList();\n  }\n\n  clickedCounter = clickedStatusCode => {\n    this.setState({\n      activeCounter: !this.state.activeCounter\n    });\n    if (clickedStatusCode) {\n      this.setState({\n        clickedStatusCode\n      });\n    }\n  };\n  getDeliveredShipmentClickedId = id => {\n    this.setState({\n      clickedShipmentId: id\n    });\n  };\n  getShipmentData = (shipmentList, current_status_code) => {\n    return shipmentList.filter(\n      csc => csc.current_status_code === `${current_status_code}`\n    );\n  };\n  render() {\n    const { shipmentList, clickedShipmentId } = this.state;\n    const { classes } = this.props;\n\n    /*------------------------------------------------\n     Get filtered data(in right hand side table)\n     as per the status code\n    ------------------------------------------------ */\n\n    const deliveredShipmentData = this.getShipmentData(shipmentList, 'DEL');\n    const inTransitShipmentData = this.getShipmentData(shipmentList, 'INT');\n    const noInfoShipments = this.getShipmentData(shipmentList, 'NFI');\n    const undeliveredShipmentData = this.getShipmentData(shipmentList, 'UND');\n    const outForDeliveryShipmentData = this.getShipmentData(\n      shipmentList,\n      'OOD'\n    );\n    const { counterStatusCodes, clickedStatusCode } = this.state;\n    return (\n      <>\n        <div className=\"status_codes_container\">\n          {Object.keys(counterStatusCodes).map(key => (\n            <div\n              onClick={() => this.clickedCounter(key)}\n              className={`status_box ${\n                key === clickedStatusCode\n                  ? 'active_status_box_color'\n                  : 'default_status_box_color'\n              }`}\n              key={key}\n            >\n              <span className=\"status_code\">{key}</span>\n              <p className=\"status_code_quantity\">{counterStatusCodes[key]}</p>\n            </div>\n          ))}\n        </div>\n        <div className={classes.tableContainer}>\n          <Table\n            stickyHeader\n            aria-label=\"sticky table\"\n            className={classes.stickyTable}\n          >\n            <TableHead>\n              <ShipmentTableHeader />\n            </TableHead>\n            <TableBody style={{ cursor: 'pointer' }}>\n              {deliveredShipmentData && clickedStatusCode === 'DEL' ? (\n                <DeliveredShipments\n                  getClickedShipmentId={this.getDeliveredShipmentClickedId}\n                  delivered={deliveredShipmentData}\n                />\n              ) : inTransitShipmentData && clickedStatusCode === 'INT' ? (\n                <InTransit\n                  getClickedShipmentId={this.getDeliveredShipmentClickedId}\n                  inTransit={inTransitShipmentData}\n                />\n              ) : undeliveredShipmentData && clickedStatusCode === 'UND' ? (\n                <UndeliveredShipments\n                  getClickedShipmentId={this.getDeliveredShipmentClickedId}\n                  undeliveredShipments={undeliveredShipmentData}\n                />\n              ) : noInfoShipments && clickedStatusCode === 'NFI' ? (\n                <NoInfoShipments\n                  getClickedShipmentId={this.getDeliveredShipmentClickedId}\n                  noInfoShipments={noInfoShipments}\n                />\n              ) : outForDeliveryShipmentData && clickedStatusCode === 'OOD' ? (\n                <OutForDelivery\n                  getClickedShipmentId={this.getDeliveredShipmentClickedId}\n                  outForDelivery={outForDeliveryShipmentData}\n                />\n              ) : null}\n            </TableBody>\n          </Table>\n        </div>\n        <Timeline\n          clickedShipmentId={clickedShipmentId}\n          clickedStatusCode={clickedStatusCode}\n          delivered={deliveredShipmentData}\n          inTransit={inTransitShipmentData}\n          undelivered={undeliveredShipmentData}\n          noInfoShipments={noInfoShipments}\n          outForDelivery={outForDeliveryShipmentData}\n        />\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ShipmentList);\n","import React from 'react';\nimport './App.css';\nimport Header from '../src/components/header/Header';\nimport ShipmentList from './components/shipments/ShipmentList';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ShipmentList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}